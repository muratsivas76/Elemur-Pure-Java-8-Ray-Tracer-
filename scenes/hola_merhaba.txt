# ===================================================
# HOLA - MERHABA - SCENE (Castellano - Turco)
# Reference Scene Uyumlu
# ===================================================

# Camera settings
Camera mainCamera {
    position = P(0.0, 1.0, 5.0);
    lookAt = P(0.0, 0.5, 0.0);
    upVector = V(0.0, 1.0, 0.0);
    fov = 60.0;
    orthographic = false;
    maxRecursionDepth = 3;
    reflective = true;
    refractive = true;
    shadowsEnabled = true;
}

# Renderer Settings
Renderer Settings {
    width = 800;
    height = 600;
    backgroundColor = #2A4E6C;
    shadowColor = #000000;
}

# Lighting
ElenaMuratAmbientLight ambientLight {
    color = #FFFFFF;
    intensity = 1.0;       
}

MuratPointLight keyLight {
    position = P(3.0, 6.0, 4.0);  
    color = #FFFFFF;
    intensity = 1.2;       
}

MuratPointLight fillLight {
    position = P(-3.0, 4, 3.0); 
    color = #FFF5E1;
    intensity = 0.5;      
}

// EKLENMESİ GEREKEN - YUMUŞAK IŞIK
MuratPointLight rimLight {
    position = P(0.0, 2.0, -2.0); // Arkadan gelen yumuşak ışık
    color = #88CCFF;
    intensity = 0.5;
}

# Materials

// Zemin
# pbr.CeramicTilePBRMaterial(Color tileColor, Color groutColor, double tileSize, double groutWidth, double tileRoughness, double groutRoughness)
CeramicTilePBRMaterial floorMat {
    tileColor = #FFFFFF;
    groutColor = #EFEFEF;
    tileSize = 0.3;
    groutWidth = 0.050;
    tileRoughness = 0.08;
    groutRoughness = 0.1;
    tileSpecular = 0.75;
    groutSpecular = 0.05;
    fresnelIntensity = 0.9;
    normalMicroFacet = 0.02;
    reflectionSharpness = 0.95;
    energyConservation = 1.0;
}

# TransparentPNGMaterial(BufferedImage texture ...)
//TransparentPNGMaterial flagsMat {
//	imagePath = "textures\paises.jpg";
//	uOffset = -0.1;
//  vOffset = -0.25;
//	uScale = 0.75;
//	vScale = 0.75;
//	isRepeatTexture = true;
//}

WordMaterial trTextMat {
	text = "Merhaba, bugkukukun naskikikilskikikin?";
	width = 1250;  // pixel
	height = 512; // pixel
	backgroundColor = #00000000;
	foregroundColor = #FFEE0066;
	fontName = "Arial";
	fontSize = 100;
	fontStyle = 1;
	wordImage = "null"; //"null" or "imagePath"
	gradientColor = 0F, 0.20F, 0.75F;
	uOffset = 0.0;
	vOffset = 0.0;
	uScale = 1.0;
	vScale = 1.0;
	isRepeatTexture = false;
}

# WordMaterial(String text, Color foregroundColor, Color backgroundColor, Font font, boolean useGradient, Color gradientColor, BufferedImage wordImage)
WordMaterial esTextMat {
	text = "!!!Hola!, ???Cooomo estaaas hoy?";
	width = 1250;
	height = 512;
	backgroundColor = #00000000;
	foregroundColor = #FF0000FF;
	gradientColor = 0F, 0.75F, 0F, 1F;
	fontName = "Arial";
	fontSize = 100;
	fontStyle = 1;
	wordImage = "null"; //"null" or "imagePath"
	uOffset = 0.0;
	vOffset = 0.0;
	uScale = 1.0;
	vScale = 1.0;
	isRepeatTexture = false;
}

# Emissive sphere (güneş gibi)
EmissiveMaterial sunMaterial {
    emissiveColor = #FFD700;
    emissiveStrength = 2.0;
}

# AnodizedMetalMaterial ()
AnodizedMetalMaterial anod {
    baseColor = #0000ff99;
}

LambertMaterial lambert {
    color = #aa3333ff;
}

# GEOMETRIES

# Parlayan küre (güneş)
Sphere sunSphere {
    radius = 0.75;
    transform = translate(4.0, 3.0, -3.0);
    material = sunMaterial;
}

# Arka duvar (Norveç bayrağı)
Plane backWall {
    pointOnPlane = P(0.0, 0.0, -8.0);
    normal = V(0.0, 0.0, 1.0);
	material = lambert;
}

# Zemin (mermer texture)
Plane floorPlane {
    pointOnPlane = P(0.0, -1.0, 0.0);
    normal = V(0.0, 1.0, 0.0);
    material = floorMat;
}

//EmojiBillboard backWallBoard {
//	width = 4.0;
//	height = 3.0;
//	transform = translate(0.4, 2.20, 1.0) * rotate(0.0, 0.0, 0.0);
//	material = flagsMat;
//}

EmojiBillboard esTextShape {
	width = 5.0;
	height = 2.0;
	transform = translate(0.0, 1.0, 2.5) * rotate(0.0, -30.0, 0.0);
	material = esTextMat;
	//material = anod;
}

EmojiBillboard trTextShape {
	width = 5.0;
	height = 2.0;
	transform = translate(0.0, 1.5, 2.5) * rotate(0.0, 30.0, 0.0);
	material = trTextMat;
	//material = anod;
}

Sphere a1 {
    radius = 1.10;
    transform = translate(-4.0, 1.0, -3.0) * rotate (0.0, 0.0, 20.0);
    material = anod;
}

Sphere a2 {
    radius = 1.10;
    transform = translate(4.4, 1.0, -3.0) * rotate (0.0, 0.0, 20.0);
    material = anod;
}
