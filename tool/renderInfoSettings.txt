# 3D SAHNE YERLEŞİMİ VE DÖNÜŞÜMLER - TAM REHBER

## 1. TEMEL DÖNÜŞÜM İŞLEMLERİ

// Temel transformasyon örnekleri:
Matrix4 öteleme = Matrix4.translate(new Vector3(1, 0, 0)); // X ekseninde +1 birim
Matrix4 döndürmeX = Matrix4.rotateX(45); // X ekseninde 45 derece
Matrix4 döndürmeY = Matrix4.rotateY(30); // Y ekseninde 30 derece 
Matrix4 ölçekleme = Matrix4.scale(2, 1, 1); // X ekseninde 2 kat genişletme

// Dönüşüm sıralaması (SAĞDAN SOLA işlem uygulanır):
Matrix4 sonHali = Matrix4.translate(new Vector3(0,2,0))
                  .multiply(Matrix4.rotateY(45))
                  .multiply(Matrix4.scale(1,3,1));
nesne.setTransform(sonHali);

## 2. GERÇEK DÜNYA ÖRNEKLERİ

### Örnek 1: Masada Duran Bardak
EMShape bardak = new Silindir(0.3, 0.8); // Yarıçap 0.3, yükseklik 0.8

// 1. Önce Z ekseninde döndür (silindir yatay duruyor)
// 2. Sonra masanın üzerine yerleştir (yükseklik 0.8)
Matrix4 bardakTransform = Matrix4.translate(new Vector3(0, 0.8, 0))
                             .multiply(Matrix4.rotateZ(90));
                             
bardak.setTransform(bardakTransform);
bardak.setMaterial(new CamMateryal());

### Örnek 2: Duvarda Asılı Tablo
EMShape tablo = new Dikdortgen(2, 1); // Genişlik 2, yükseklik 1

// 1. Önce merkez noktasını orijine taşı
// 2. Sonra X ekseninde 10° eğim ver
// 3. En son duvara yerleştir (Z: -3.5)
Matrix4 tabloTransform = Matrix4.translate(new Vector3(0, 1.5, -3.5))
                            .multiply(Matrix4.rotateX(10))
                            .multiply(Matrix4.translate(new Vector3(-1, -0.5, 0)));

tablo.setTransform(tabloTransform);
tablo.setMaterial(new AhşapMateryal());

## 3. KAMERA AYARLARI

### Temel Kamera Pozisyonları:
// a) Üstten bakış (2D plan)
kamera.setCameraPosition(new Point3(0, 10, 0.1));
kamera.setLookAt(new Point3(0, 0, 0));

// b) Perspektif görünüm
kamera.setCameraPosition(new Point3(5, 3, 5));
kamera.setLookAt(new Point3(0, 1, 0));

// c) Yakın çekim
kamera.setCameraPosition(new Point3(0, 1.2, 2));
kamera.setLookAt(new Point3(0, 1.2, 0));

## 4. IŞIKLANDIRMA TEKNİKLERİ

// 1. Ana ışık (güneş)
scene.addLight(new ElenaDirectionalLight(
    new Vector3(-1, -1, -0.5).normalize(),
    new Color(255, 240, 220),
    0.9
));

// 2. Dolgu ışığı
scene.addLight(new ElenaDirectionalLight(
    new Vector3(0.5, -0.5, 0).normalize(),
    new Color(210, 230, 255),
    0.4
));

// 3. Spot ışık
scene.addLight(new MuratPointLight(
    new Point3(2, 3, 1),
    new Color(255, 250, 200),
    1.2
));

## 5. SIK KARŞILAŞILAN PROBLEMLER

### Problem 1: Nesne görünmüyor
Çözüm Adımları:
1. Kameranın bakış yönünü kontrol et:
   - kamera.setLookAt(nesneninMerkezi);
2. Nesnenin boyutunu kontrol et:
   - 0.1'den küçük veya 100'den büyük olmasın
3. Transform sırasını ters çevirmeyi dene

### Problem 2: Işık etkisiz
Çözüm Adımları:
1. Işık şiddetini 1.0 üzerine çıkar
2. Işık yönünü nesneye doğru çevir
3. Ambient ışık ekle:
   scene.addLight(new ElenaMuratAmbientLight(Color.WHITE, 0.2));

### Problem 3: Dönüşümler hatalı
Çözüm Adımları:
1. Sadece öteleme uygula, çalışıyor mu kontrol et
2. Sonra tek tek diğer transformları ekle
3. Pivot noktasını değiştir:
   - Önce nesneyi merkeze taşı: Matrix4.translate(new Vector3(-0.5,-0.5,-0.5))
   - Sonra diğer işlemleri uygula
   - En son istediğin yere taşı

## 6. FAYDALI İPUÇLARI

1. Debug için önce basit şekillerle başla (küp, küre)
2. Her transform adımını ayrı ayrı test et
3. Kamera görüş açısını (FOV) ayarla:
   - Dar açı (20-30): Odaklanmış görünüm
   - Geniş açı (60-90): Geniş perspektif
4. Işık renklerini ayarla:
   - Sıcak (255,240,220) - Gün batımı
   - Soğuk (220,240,255) - Bulutlu gün
5. Ölçeklendirmede uniform değerler kullan:
   - scale(1,2,1) gibi non-uniform ölçeklerde sorun çıkabilir

## 7. ÖRNEK SAHNE KURULUMU

// 1. Zemin
EMShape zemin = new Plane(new Point3(0,0,0), new Vector3(0,1,0));
zemin.setMaterial(new TahtaZeminMateryal());

// 2. Duvarlar
EMShape arkaDuvar = new Plane(new Point3(0,2,-5), new Vector3(0,0,1));
arkaDuvar.setMaterial(new BoyaliDuvarMateryal());

// 3. Nesneler
EMShape masa = new Kutu(2, 0.8, 1);
masa.setTransform(Matrix4.translate(new Vector3(0,0.4,0)));

// 4. Kamera
kamera.setCameraPosition(new Point3(3,2,4));
kamera.setLookAt(new Point3(0,1,0));

// 5. Işıklandırma
scene.addLight(new ElenaDirectionalLight(...));